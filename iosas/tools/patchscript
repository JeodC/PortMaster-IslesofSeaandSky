#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/gamedata"
export SDL_GAMECONTROLLERCONFIG="$sdl_controllerconfig"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 666 /dev/uinput
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggenc"

cd "$GAMEDIR"

apply_xdelta() {
    # Check if the data.win file exists and apply xdelta
    if [ -f "$DATADIR/data.win" ]; then
        echo "Applying xdelta patch"
        output=$(xdelta3 -d -s "$DATADIR/data.win" -f "./tools/patches/idol_sfx.xdelta" "$DATADIR/game.droid" 2>&1)
        if [ $? -eq 0 ]; then
            echo "Patch applied successfully"
            echo "$output"
            rm "$DATADIR/data.win"
        else
            echo "Failed to apply patch"
            echo "$output"
            exit 1
        fi
    fi
}

compress_audio() {
    # Compress audio
        echo "Compressing audio. The process will take 5-10 minutes."     
        mkdir -p "$TMPDIR"
        # Run the compression tool
        echo "Running gmKtool.py with parameters..."
        PYTHON=$(which python3)
        $PYTHON ./tools/gmKtool.py -vvv -m 1024 -b 64 -d "$TMPDIR" "$DATADIR/game.droid"

        if [ $? -eq 0 ]; then
            echo "Compression completed successfully."
            mv "$TMPDIR/"* "$DATADIR"
            echo "Moved compressed files to $DATADIR."
            rmdir "$TMPDIR"
            echo "Temporary directory $TMPDIR removed."
            echo "Audio compression applied successfully."
        else
            echo "Audio compression failed."
            echo "Cleaning up temporary directory $TMPDIR."
            rm -rf "$TMPDIR"
        fi
}

process_game() {
    # Delete unnecessary files
    rm -rf $DATADIR/*.exe $DATADIR/*.dll
    echo "Removed unecessary files"

    apply_xdelta
    compress_audio
    sleep 3
    
    # Font replacements
    if [ -f "localization_fonts.csv" ]; then
        sed -i 's/malgun\.ttf/BMDOHYEON_ttf.ttf/g' "$DATADIR/localization_fonts.csv" # Korean
        rm -rf malgun.ttf
        echo "Patched font files"
    fi
	
    # Final completion message
    echo "Patching process complete!"
}

# Call the function
process_game
